name: Build, Push & Deploy Backend and Frontend

on:
  push:
    branches: [main]

jobs:
  build-and-push:
    name: Build & Push Docker Images
    runs-on: ubuntu-latest
    steps:
      - name: üì• Checkout repository
        uses: actions/checkout@v4

      - name: üõ†Ô∏è Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: üîë Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: üê≥ Build & Push Backend Docker Image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./src/MerchStore.WebApi/Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/merch-store-backend:latest

      - name: üê≥ Build & Push Frontend Docker Image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./src/MerchStore.WebClient/Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/merch-store-frontend:latest

  update-container-apps:
    name: Update Azure Container Apps
    needs: build-and-push
    runs-on: ubuntu-latest
    env:
      BACKEND_APP_URL: ${{ secrets.MERCHSTORE_BACKEND_URL }}
    steps:
      - name: üì• Checkout repository
        uses: actions/checkout@v4

      - name: üîë Azure CLI Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: üîÑ Update Backend Container App
        run: |
          az containerapp update \
            --name merchstorebackend \
            --resource-group MerchStoreRG \
            --image ${{ secrets.DOCKERHUB_USERNAME }}/merch-store-backend:latest
          echo "Waiting for backend container app to update..."
          sleep 30

      - name: üí® Smoke Test Backend Application
        run: |
          echo "Attempting to reach Swagger UI at ${{ env.BACKEND_APP_URL }}/swagger"
          STATUS_CODE=$(curl -L -s -o /dev/null -w "%{http_code}" --max-time 15 --retry 3 --retry-delay 5 "${{ env.BACKEND_APP_URL }}/swagger")
          if [ "$STATUS_CODE" -eq 200 ]; then
            echo "Smoke test PASSED: Received HTTP $STATUS_CODE from ${{ env.BACKEND_APP_URL }}/swagger"
          else
            echo "Smoke test FAILED: Received HTTP $STATUS_CODE from ${{ env.BACKEND_APP_URL }}/swagger."
            exit 1 # Workflow will fail if smoke test does not return 200
          fi

      - name: üîÑ Update Frontend Container App
        run: |
          az containerapp update \
            --name merchstorefrontend \
            --resource-group MerchStoreRG \
            --image ${{ secrets.DOCKERHUB_USERNAME }}/merch-store-frontend:latest \
            --set-env-vars VITE_API_URL=${{ secrets.VITE_API_URL }}
